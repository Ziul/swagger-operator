name: Building

on:
  workflow_call:
    outputs:
      version:
        description: version created on this build
        value: ${{ jobs.build.outputs.version }}
    secrets:
      DOCKER_REGISTRY:
        description: Docker registry URL
        required: true
      DOCKER_USERNAME:
        description: Docker username
        required: true
      DOCKER_PASSWORD:
        description: Docker password
        required: true
      DOCKER_REPOSITORY:
        description: Docker repository name
        required: true

jobs:
  versioning:
    uses: ./.github/workflows/version.yaml
    with:
      runner: ubuntu-latest
  test:
    uses: ./.github/workflows/tests.yaml
  build-docker:
    name: Docker Building
    runs-on: ubuntu-latest
    needs: [versioning, test]
    if: github.ref_name == 'main' || github.event_name == 'release'
    outputs:
      version: ${{needs.versioning.outputs.FullSemVer}}
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        uses: docker/login-action@v3
        env:
          ACTIONS_STEP_DEBUG: true
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ needs.versioning.outputs.MajorMinorPatch }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
  build-helm:
    name: Helm Building
    runs-on: ubuntu-latest
    needs: [versioning, test]
    if: github.ref_name == 'main' || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Helm Build
        run: |
          helm package ./charts/swagger-operator --app-version ${{ needs.versioning.outputs.MajorMinorPatch }} --version ${{ needs.versioning.outputs.MajorMinorPatch }}-chart
          helm repo index . --url ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          helm registry login ${{ secrets.DOCKER_REGISTRY }} --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          helm push swagger-operator-${{ needs.versioning.outputs.MajorMinorPatch }}-chart.tgz oci://${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}
          echo "# Swagger Operator Helm Chart pushed to OCI registry" >> $GITHUB_STEP_SUMMARY
          echo "## Helm Chart Version: ${{ needs.versioning.outputs.MajorMinorPatch }}" >> $GITHUB_STEP_SUMMARY
          echo " Use the following command to install the chart:" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "helm install swagger-operator oci://${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/swagger-operator --version ${{ needs.versioning.outputs.MajorMinorPatch }}-chart" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "Helm Chart URL:https://hub.docker.com/r//${{ secrets.DOCKER_USERNAME }}/swagger-operator" >> $GITHUB_STEP_SUMMARY
  