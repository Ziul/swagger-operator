name: Building

on:
  workflow_call:
    outputs:
      version:
        description: version created on this build
        value: ${{ jobs.build.outputs.version }}
    secrets:
      DOCKER_REGISTRY:
        description: Docker registry URL
        required: true
      DOCKER_USERNAME:
        description: Docker username
        required: true
      DOCKER_PASSWORD:
        description: Docker password
        required: true
      DOCKER_REPOSITORY:
        description: Docker repository name
        required: true

jobs:
  versioning:
    uses: ./.github/workflows/version.yaml
    with:
      runner: ubuntu-latest
  test:
    uses: ./.github/workflows/tests.yaml
  build-docker:
    name: Docker Building
    runs-on: ubuntu-latest
    needs: [versioning, test]
    if: github.ref_name == 'main' || github.event_name == 'release'
    outputs:
      version: ${{needs.versioning.outputs.FullSemVer}}
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        uses: docker/login-action@v3
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ needs.versioning.outputs.MajorMinorPatch }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

  build-helm-oci:
    name: Helm Building
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: github.ref_name == 'main' || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Helm Build
        run: |
          helm package ./charts/swagger-operator --app-version ${{ needs.versioning.outputs.MajorMinorPatch }} --version ${{ needs.versioning.outputs.MajorMinorPatch }}-chart
          helm repo index . --url ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          helm registry login ${{ secrets.DOCKER_REGISTRY }} --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          helm push swagger-operator-${{ needs.versioning.outputs.MajorMinorPatch }}-chart.tgz oci://${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}

  build-helm:
    name: Helm Build & Publish to GitHub Pages
    runs-on: ubuntu-latest
    needs: [versioning, test]
    if: github.ref_name == 'main' || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package Helm chart
        run: |
          helm package ./charts/swagger-operator \
            --app-version ${{ needs.versioning.outputs.MajorMinorPatch }} \
            --version ${{ needs.versioning.outputs.MajorMinorPatch }}
          mkdir -p helm-charts
          mv swagger-operator-*.tgz helm-charts/

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Copy new chart to gh-pages
        run: |
          cp helm-charts/*.tgz gh-pages/
          cd gh-pages
          helm repo index . --url https://ziul.github.io/swagger-operator/

      - name: Commit and push changes
        run: |
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update Helm chart [skip ci]" || echo "No changes to commit"
          git push origin gh-pages

